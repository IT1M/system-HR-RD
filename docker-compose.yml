version: '3.8'

services:
  app:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/xi-xu-training
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - GEMINI_API_KEY=your-gemini-api-key
      - FRONTEND_URL=http://localhost:3000
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_SECURE=false
      - SMTP_USER=your-email@gmail.com
      - SMTP_PASS=your-email-password
      - EMAIL_FROM=noreply@xixu.com
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/reports:/app/reports
      - ./backend/logs:/app/logs
    depends_on:
      - mongodb
      - redis
    restart: unless-stopped
    networks:
      - xi-xu-network

  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=your-mongo-password
    volumes:
      - mongodb_data:/data/db
      - ./database/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    restart: unless-stopped
    networks:
      - xi-xu-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - xi-xu-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - xi-xu-network

volumes:
  mongodb_data:
  redis_data:

networks:
  xi-xu-network:
    driver: bridge